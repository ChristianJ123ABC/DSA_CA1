/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package bloodapp;

import javax.swing.JOptionPane;

/**
 *
 * @author flips
 */
//Sources:
/*

 Week 2 - Abstract Data Types. Stack and Queue Stack App Solution
 AEMaterHospital Solution Week 3 Moodle, Recursion PDF Moodle
    
*/
public class BloodGUI extends javax.swing.JFrame {
    private SInterface sBloodList;
    private PQInterface pqBloodList;
    SLList sll = new SLList();
    
    
    /**
     * Creates new form BloodGUI
     */
    public BloodGUI() {
        sBloodList = new Stack();
        pqBloodList = new PriorityQueue();
        
        initComponents();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        wardWarn = new javax.swing.ButtonGroup();
        titleLbl = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        priorityLbl = new javax.swing.JLabel();
        priorityTf = new javax.swing.JTextField();
        nameTf = new javax.swing.JTextField();
        priorityWarnBtn = new javax.swing.JToggleButton();
        gpLbl1 = new javax.swing.JLabel();
        gpTf = new javax.swing.JTextField();
        submitBtn = new javax.swing.JToggleButton();
        nextPatientBtn = new javax.swing.JToggleButton();
        noShowBtn = new javax.swing.JToggleButton();
        ageLbl = new javax.swing.JLabel();
        ageTf = new javax.swing.JTextField();
        wardWarnLbl = new javax.swing.JLabel();
        wardYesRb = new javax.swing.JRadioButton();
        wardNoRb = new javax.swing.JRadioButton();
        urgentPatientsBtn = new javax.swing.JToggleButton();
        allPatientsBtn = new javax.swing.JToggleButton();
        priorityCheckTf = new javax.swing.JTextField();
        priorityCheckLbl = new javax.swing.JLabel();
        historyBtn = new javax.swing.JToggleButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        titleLbl.setBackground(new java.awt.Color(255, 51, 51));
        titleLbl.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N
        titleLbl.setForeground(new java.awt.Color(255, 51, 51));
        titleLbl.setText("Blood Test");
        getContentPane().add(titleLbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 10, 266, -1));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel1.setText("Name:");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 80, 80, -1));

        priorityLbl.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        priorityLbl.setText("Priority Level:");
        getContentPane().add(priorityLbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 230, 130, -1));
        getContentPane().add(priorityTf, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 230, 170, 30));
        getContentPane().add(nameTf, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 80, 170, 30));

        priorityWarnBtn.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        priorityWarnBtn.setText("What is Priority Level?");
        priorityWarnBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                priorityWarnBtnActionPerformed(evt);
            }
        });
        getContentPane().add(priorityWarnBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 10, 190, -1));

        gpLbl1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        gpLbl1.setText("GP Details:");
        getContentPane().add(gpLbl1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 130, 110, -1));
        getContentPane().add(gpTf, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 130, 170, 30));

        submitBtn.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        submitBtn.setText("Submit");
        submitBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submitBtnActionPerformed(evt);
            }
        });
        getContentPane().add(submitBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 330, 150, -1));

        nextPatientBtn.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        nextPatientBtn.setText("Next Patient");
        nextPatientBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nextPatientBtnActionPerformed(evt);
            }
        });
        getContentPane().add(nextPatientBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 330, 150, -1));

        noShowBtn.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        noShowBtn.setText("Last 5 People Who Have Not Shown");
        noShowBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                noShowBtnActionPerformed(evt);
            }
        });
        getContentPane().add(noShowBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 390, 290, -1));

        ageLbl.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        ageLbl.setText("Age:");
        getContentPane().add(ageLbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 180, -1, -1));
        getContentPane().add(ageTf, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 180, 170, 30));

        wardWarnLbl.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        wardWarnLbl.setText("Are you currently coming from a hospital ward?");
        getContentPane().add(wardWarnLbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 280, -1, -1));

        wardWarn.add(wardYesRb);
        wardYesRb.setText("Yes");
        wardYesRb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                wardYesRbActionPerformed(evt);
            }
        });
        getContentPane().add(wardYesRb, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 280, -1, -1));

        wardWarn.add(wardNoRb);
        wardNoRb.setText("No");
        getContentPane().add(wardNoRb, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 280, -1, -1));

        urgentPatientsBtn.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        urgentPatientsBtn.setText("Display Patients by Priority");
        urgentPatientsBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                urgentPatientsBtnActionPerformed(evt);
            }
        });
        getContentPane().add(urgentPatientsBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 170, 230, 30));

        allPatientsBtn.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        allPatientsBtn.setText("Show All Patients");
        allPatientsBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                allPatientsBtnActionPerformed(evt);
            }
        });
        getContentPane().add(allPatientsBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 330, 180, 30));
        getContentPane().add(priorityCheckTf, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 120, 170, 40));

        priorityCheckLbl.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        priorityCheckLbl.setText("Priority:");
        getContentPane().add(priorityCheckLbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 120, 130, 30));

        historyBtn.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        historyBtn.setText("Past Patients Seen");
        historyBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                historyBtnActionPerformed(evt);
            }
        });
        getContentPane().add(historyBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 390, 290, 30));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void priorityWarnBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_priorityWarnBtnActionPerformed
        // TODO add your handling code here:
        JOptionPane.showMessageDialog(null, "Low: (Type 1 in textfield) \n Medium: (Type 2 in textfield) \n Urgent: (Type 3 in textfield)");
        
        
        
        
    }//GEN-LAST:event_priorityWarnBtnActionPerformed

    
    
    
    private void submitBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submitBtnActionPerformed
        // TODO add your handling code here:
        int priority;
        String ward;
        Blood b = new Blood();
        b.setName(nameTf.getText());
        b.setGpDetails(gpTf.getText());
        b.setAge(Integer.parseInt(ageTf.getText()));
        if(wardYesRb.isSelected()){
            b.setWard("Status: Currently coming from ward");
            ward = "Status: Currently coming from ward";
        }
        else if (wardNoRb.isSelected()){
            b.setWard("Status: Not currently coming from ward");
            ward = "Status: Not currently coming from ward";
        }
        
        else{
            JOptionPane.showMessageDialog(null, "Please state if you are coming from the hospital ward via the radio buttons");
            return;
        }
        priority = Integer.parseInt(priorityTf.getText());
        if(!priorityTf.getText().equals("1") && !priorityTf.getText().equals("2") && !priorityTf.getText().equals("3")){
            JOptionPane.showMessageDialog(null, "Invalid Priority, please try again");
            return;
        }
        
        //Adds the object, b, to each ArrayList / ADT
        pqBloodList.enqueue(priority, b);
        sBloodList.push(b);
        
        
        if(priorityTf.getText().equals("1")){
            JOptionPane.showMessageDialog(null, "Patient with a low priority has been added: \n"+"Name: "+nameTf.getText()+ "\n GP Details: "+gpTf.getText()+"\n Priority: "+priority+"\n Age: "+ageTf.getText()+"\n "+ward);
        }
        else if(priorityTf.getText().equals("2")){
            JOptionPane.showMessageDialog(null, "Patient with a medium priority has been added: \n"+"Name: "+nameTf.getText()+ "\n GP Details: "+gpTf.getText()+"\n Priority: "+priority+"\n Age: "+ageTf.getText()+"\n "+ward);
        }
        else if(priorityTf.getText().equals("3")){
            JOptionPane.showMessageDialog(null, "Patient with an URGENT!! priority has been added: \n"+"Name: "+nameTf.getText()+ "\n GP Details: "+gpTf.getText()+"\n Priority: "+priority+"\n Age: "+ageTf.getText()+"\n "+ward);
        }
    }//GEN-LAST:event_submitBtnActionPerformed

    private void nextPatientBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nextPatientBtnActionPerformed
        // TODO add your handling code here:
        
        if(pqBloodList.isEmpty()){
            JOptionPane.showMessageDialog(null, "There are no more patients");
        }
        //Makes an instance of the PQ arraylist and the Blood variables
        //Uses the setters and getters from the respective classes and displays them
        else{
            
            //Dequeues the oldest patient with highest priority and stores them in a history of previous patients
            PQElement pqElement = (PQElement) pqBloodList.dequeue();
            Blood bloodPatient = (Blood)pqElement.getPatient();
            sll.add(bloodPatient); 
            
            JOptionPane.showMessageDialog(null, "Next Patient: "+bloodPatient.getName()+" \nPriority: "+pqElement.getPriority()+"\n Age: "+bloodPatient.getAge()+"\n "+bloodPatient.getWard());
        }
        
    }//GEN-LAST:event_nextPatientBtnActionPerformed

    private void noShowBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_noShowBtnActionPerformed
        // TODO add your handling code here:
           
           JOptionPane.showMessageDialog(null, sBloodList.displayStack());
        
    }//GEN-LAST:event_noShowBtnActionPerformed

    private void urgentPatientsBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_urgentPatientsBtnActionPerformed
        // TODO add your handling code here:
        if(pqBloodList.isEmpty()){
            JOptionPane.showMessageDialog(null, "No Patients added");
            return;
        }
        
        if(priorityCheckTf.getText().isEmpty()){
            JOptionPane.showMessageDialog(null, "Enter x priority to see Patients with x priority");
        }
        
        
        
        int priority = Integer.parseInt(priorityCheckTf.getText());
        if(priority > 3 || priority <= 0){
            JOptionPane.showMessageDialog(null, "Invalid priority, please try a value between 1-3");
            
        }
        
        //If the priority list displays a blank message, remove it
        //otherwise, display each Patient with i priority
        else{
            for(int i = 0; i<pqBloodList.size(); i++){
                if(pqBloodList.patientPriority(i, priority) == ""){ //Used to stop blank JOptionPanes appearing
                    
                }
                
                else{
                  JOptionPane.showMessageDialog(null, pqBloodList.patientPriority(i,priority));
                  break;
                }
                
            }
        }

       
    }//GEN-LAST:event_urgentPatientsBtnActionPerformed

    private void allPatientsBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_allPatientsBtnActionPerformed
        // TODO add your handling code here:
        if(pqBloodList.isEmpty()){
            JOptionPane.showMessageDialog(null, "No Patients added");
        }
        else{
            JOptionPane.showMessageDialog(null, pqBloodList.printPQueue());
        }
    }//GEN-LAST:event_allPatientsBtnActionPerformed

    private void wardYesRbActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_wardYesRbActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_wardYesRbActionPerformed

    private void historyBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_historyBtnActionPerformed
        // TODO add your handling code here:
        sll.printList();
    }//GEN-LAST:event_historyBtnActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(BloodGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(BloodGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(BloodGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(BloodGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new BloodGUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel ageLbl;
    private javax.swing.JTextField ageTf;
    private javax.swing.JToggleButton allPatientsBtn;
    private javax.swing.JLabel gpLbl1;
    private javax.swing.JTextField gpTf;
    private javax.swing.JToggleButton historyBtn;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JTextField nameTf;
    private javax.swing.JToggleButton nextPatientBtn;
    private javax.swing.JToggleButton noShowBtn;
    private javax.swing.JLabel priorityCheckLbl;
    private javax.swing.JTextField priorityCheckTf;
    private javax.swing.JLabel priorityLbl;
    private javax.swing.JTextField priorityTf;
    private javax.swing.JToggleButton priorityWarnBtn;
    private javax.swing.JToggleButton submitBtn;
    private javax.swing.JLabel titleLbl;
    private javax.swing.JToggleButton urgentPatientsBtn;
    private javax.swing.JRadioButton wardNoRb;
    private javax.swing.ButtonGroup wardWarn;
    private javax.swing.JLabel wardWarnLbl;
    private javax.swing.JRadioButton wardYesRb;
    // End of variables declaration//GEN-END:variables
}
